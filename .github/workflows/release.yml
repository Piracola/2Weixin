name: Rust Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: weixin2 

jobs:
  build_and_release:
    runs-on: windows-latest
    permissions: # 添加 permissions 块
      contents: write # 授予写入仓库内容的权限，包括创建 Release 和上传 assets

    steps:
    - uses: actions/checkout@v4

    - name: Cache Cargo registry and target directory
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      run: cargo build --release --verbose --bin weixin2 --bin quicklaunch

    - name: Run tests
      run: cargo test --release --verbose

    - name: Get commit messages
      id: get_commits
      run: |
        echo "COMMIT_MESSAGES=$(git log --pretty=format:'- %s' $(git describe --abbrev=0 --tags ${{ github.ref_name }}^)..${{ github.ref_name }})" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }} # 使用被推送的标签名
        release_name: Release ${{ github.ref_name }} # Release 的名称
        body: |
          自动构建的 Release 版本 ${{ github.ref_name }}
          
          ### 提交历史
          ${{ steps.get_commits.outputs.COMMIT_MESSAGES }}
        draft: false
        prerelease: false # 如果是预发布版本，可以设置为 true

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 从 'Create Release' 步骤获取上传 URL
        asset_path: ./target/release/${{ env.PROJECT_NAME }}.exe # 要上传的文件的路径
        asset_name: ${{ env.PROJECT_NAME }}-${{ github.ref_name }}.exe # 上传到 Release 的资产名称
        asset_content_type: application/vnd.microsoft.portable-executable # 可执行文件的 MIME 类型
        
    - name: Upload QuickLaunch Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/quicklaunch.exe
        asset_name: quicklaunch-${{ github.ref_name }}.exe
        asset_content_type: application/vnd.microsoft.portable-executable
